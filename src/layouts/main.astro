---
import '@/globals.css'

interface Props {
  title?: string
}

const { title = 'july jagt - fullstack dev & data engineer' } = Astro.props
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="icon" href="/favicon.ico" />
    <link rel="manifest" href="/site.webmanifest" />

    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />

    <title>{title}</title>

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap"
      rel="stylesheet"
    />
  </head>
  <body>
    <div class="blur" aria-hidden="true"></div>
    <div
      class="bg-white text-gray-500 dark:bg-gray-900 dark:text-blue-100 min-h-screen"
    >
      <div class="px-4 mx-auto sm:max-w-xl md:max-w-2xl">
        <slot />
      </div>
    </div>
  </body>
</html>

<style>
  .header {
    @apply font-semibold text-lg mt-20 mb-6 text-black dark:text-white;
  }
</style>

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme')
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches
      ? 'dark'
      : 'light'
  }
  const isDark = getThemePreference() === 'dark'
  document.documentElement.classList[isDark ? 'add' : 'remove']('dark')

  if (typeof localStorage !== 'undefined') {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains('dark')
      localStorage.setItem('theme', isDark ? 'dark' : 'light')
    })
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ['class'],
    })
  }
</script>
